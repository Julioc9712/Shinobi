# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch tag latest and commit ref slug
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - |
      tag="${CI_COMMIT_SHORT_SHA}"
      if [[ "$CI_COMMIT_BRANCH" == "dev" ]]; then
          echo "Running on default branch 'dev': tags => ['$tag','latest']"
          dockerBuildParams="-t ${CI_REGISTRY_IMAGE}:${tag} -t ${CI_REGISTRY_IMAGE}:latest"
      elif [[ "$CI_COMMIT_BRANCH" == "master" ]]; then
          echo "Running on default branch 'master': tags => ['$tag','stable']"
          dockerBuildParams="-t ${CI_REGISTRY_IMAGE}:${tag} -t ${CI_REGISTRY_IMAGE}:stable"
      else
          echo "Running on branch '$CI_COMMIT_BRANCH': tag => [$tag]"
          dockerBuildParams="-t ${CI_REGISTRY_IMAGE}:${tag}"
      fi
    - docker build --pull ${dockerBuildParams} .
    - docker push $CI_REGISTRY_IMAGE -a
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile
